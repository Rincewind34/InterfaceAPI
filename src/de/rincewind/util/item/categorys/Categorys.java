package de.rincewind.util.item.categorys;

import java.util.HashMap;
import java.util.Map;

import org.bukkit.Material;
import org.bukkit.material.MaterialData;

@SuppressWarnings("deprecation")
public class Categorys {
	
	private static Map<String, Category> categories = new HashMap<String, Category>();
	
	/**
	 * Categories: Sort items by categories
	 */
	public Categorys() {
		Category armor = new Category();
		armor.addMaterial(Material.LEATHER_HELMET);
		armor.addMaterial(Material.LEATHER_CHESTPLATE);
		armor.addMaterial(Material.LEATHER_LEGGINGS);
		armor.addMaterial(Material.LEATHER_BOOTS);
		armor.addMaterial(Material.GOLD_HELMET);
		armor.addMaterial(Material.GOLD_CHESTPLATE);
		armor.addMaterial(Material.GOLD_LEGGINGS);
		armor.addMaterial(Material.GOLD_BOOTS);
		armor.addMaterial(Material.CHAINMAIL_HELMET);
		armor.addMaterial(Material.CHAINMAIL_CHESTPLATE);
		armor.addMaterial(Material.CHAINMAIL_LEGGINGS);
		armor.addMaterial(Material.CHAINMAIL_BOOTS);
		armor.addMaterial(Material.IRON_HELMET);
		armor.addMaterial(Material.IRON_CHESTPLATE);
		armor.addMaterial(Material.IRON_LEGGINGS);
		armor.addMaterial(Material.IRON_BOOTS);
		armor.addMaterial(Material.DIAMOND_HELMET);
		armor.addMaterial(Material.DIAMOND_CHESTPLATE);
		armor.addMaterial(Material.DIAMOND_LEGGINGS);
		armor.addMaterial(Material.DIAMOND_BOOTS);
		Categorys.add("armor", armor);
		
		Category tools = new Category();
		tools.addMaterial(Material.WOOD_AXE);
		tools.addMaterial(Material.WOOD_PICKAXE);
		tools.addMaterial(Material.WOOD_HOE);
		tools.addMaterial(Material.WOOD_SPADE);
		tools.addMaterial(Material.STONE_AXE);
		tools.addMaterial(Material.STONE_PICKAXE);
		tools.addMaterial(Material.STONE_HOE);
		tools.addMaterial(Material.STONE_SPADE);
		tools.addMaterial(Material.GOLD_AXE);
		tools.addMaterial(Material.GOLD_PICKAXE);
		tools.addMaterial(Material.GOLD_HOE);
		tools.addMaterial(Material.GOLD_SPADE);
		tools.addMaterial(Material.IRON_AXE);
		tools.addMaterial(Material.IRON_PICKAXE);
		tools.addMaterial(Material.IRON_HOE);
		tools.addMaterial(Material.IRON_SPADE);
		tools.addMaterial(Material.DIAMOND_AXE);
		tools.addMaterial(Material.DIAMOND_PICKAXE);
		tools.addMaterial(Material.DIAMOND_HOE);
		tools.addMaterial(Material.DIAMOND_SPADE);
		tools.addMaterial(Material.COMPASS);
		tools.addMaterial(Material.WATCH);
		tools.addMaterial(Material.FISHING_ROD);
		tools.addMaterial(Material.CARROT_STICK);
		tools.addMaterial(Material.LEASH);
		tools.addMaterial(Material.SHEARS);
		tools.addMaterial(Material.NAME_TAG);
		tools.addMaterial(Material.FLINT_AND_STEEL);
		Categorys.add("tools", tools);
		
		Category drinkable = new Category();
		drinkable.addMaterial(new MaterialData(Material.GLASS_BOTTLE, (byte) 1));
		drinkable.addMaterial(Material.POTION);
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8193));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8225));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8257));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16385));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16417));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16449));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8194));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8226));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8258));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16386));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16418));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16460));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8193));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8227));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8259));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16419));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16451));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8196));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8228));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8260));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16388));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16420));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16452));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8261));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8229));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16453));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16421));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8230));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8262));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16422));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16454));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8232));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8264));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16424));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16456));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8201));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8233));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8265));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16393));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16425));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16457));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8234));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8266));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16426));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16458));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8268));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8236));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16460));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16428));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8237));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8269));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16429));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16461));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8238));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8270));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16430));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16462));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8203));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8235));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 8267));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16395));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16427));
		drinkable.addMaterial(new MaterialData(Material.POTION, (byte) 16459));
		Categorys.add("drinkable", drinkable);
		
		Category eatable = new Category();
		eatable.addMaterial(Material.APPLE);
		eatable.addMaterial(Material.MUSHROOM_SOUP);
		eatable.addMaterial(Material.APPLE);
		eatable.addMaterial(Material.BREAD);
		eatable.addMaterial(Material.PORK);
		eatable.addMaterial(Material.GRILLED_PORK);
		eatable.addMaterial(Material.GOLDEN_APPLE);
		eatable.addMaterial(new MaterialData(Material.GOLDEN_APPLE, (byte) 1));
		eatable.addMaterial(Material.RAW_FISH);
		eatable.addMaterial(new MaterialData(Material.RAW_FISH, (byte) 1));
		eatable.addMaterial(new MaterialData(Material.RAW_FISH, (byte) 2));
		eatable.addMaterial(Material.COOKED_FISH);
		eatable.addMaterial(new MaterialData(Material.COOKED_FISH, (byte) 1));
		eatable.addMaterial(Material.CAKE);
		eatable.addMaterial(Material.COOKIE);
		eatable.addMaterial(Material.MELON);
		eatable.addMaterial(Material.RAW_BEEF);
		eatable.addMaterial(Material.COOKED_BEEF);
		eatable.addMaterial(Material.RAW_CHICKEN);
		eatable.addMaterial(Material.COOKED_CHICKEN);
		eatable.addMaterial(Material.ROTTEN_FLESH);
		eatable.addMaterial(Material.SPIDER_EYE);
		eatable.addMaterial(Material.CARROT);
		eatable.addMaterial(Material.POTATO_ITEM);
		eatable.addMaterial(Material.BAKED_POTATO);
		eatable.addMaterial(Material.POISONOUS_POTATO);
		eatable.addMaterial(Material.PUMPKIN_PIE);
		eatable.addMaterial(Material.RABBIT);
		eatable.addMaterial(Material.COOKED_RABBIT);
		eatable.addMaterial(Material.RABBIT_STEW);
		eatable.addMaterial(Material.MUTTON);
		eatable.addMaterial(Material.COOKED_MUTTON);
		Categorys.add("eatable", eatable);
		
		Category weapons = new Category();
		weapons.addMaterial(Material.WOOD_SWORD);
		weapons.addMaterial(Material.STONE_SWORD);
		weapons.addMaterial(Material.GOLD_SWORD);
		weapons.addMaterial(Material.IRON_SWORD);
		weapons.addMaterial(Material.DIAMOND_SWORD);
		weapons.addMaterial(Material.BOW);
		Categorys.add("weapons", weapons);
		
		Category tabBlocks = new Category();
		tabBlocks.addMaterial(new MaterialData(Material.STONE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.STONE, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.STONE, (byte) 2));
		tabBlocks.addMaterial(new MaterialData(Material.STONE, (byte) 3));
		tabBlocks.addMaterial(new MaterialData(Material.STONE, (byte) 4));
		tabBlocks.addMaterial(new MaterialData(Material.STONE, (byte) 5));
		tabBlocks.addMaterial(new MaterialData(Material.STONE, (byte) 6));
		tabBlocks.addMaterial(new MaterialData(Material.GRASS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.DIRT, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.DIRT, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.DIRT, (byte) 2));
		tabBlocks.addMaterial(new MaterialData(Material.COBBLESTONE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.WOOD, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.WOOD, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.WOOD, (byte) 2));
		tabBlocks.addMaterial(new MaterialData(Material.WOOD, (byte) 3));
		tabBlocks.addMaterial(new MaterialData(Material.WOOD, (byte) 4));
		tabBlocks.addMaterial(new MaterialData(Material.WOOD, (byte) 5));
		tabBlocks.addMaterial(new MaterialData(Material.BEDROCK, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.SAND, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.SAND, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.GRAVEL, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.GOLD_ORE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.IRON_ORE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.COAL_ORE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.LOG, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.LOG, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.LOG, (byte) 2));
		tabBlocks.addMaterial(new MaterialData(Material.LOG, (byte) 3));
		tabBlocks.addMaterial(new MaterialData(Material.SPONGE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.SPONGE, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.GLASS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.LAPIS_ORE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.LAPIS_BLOCK, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.SANDSTONE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.SANDSTONE, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.SANDSTONE, (byte) 2));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 2));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 3));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 4));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 5));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 6));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 7));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 8));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 9));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 10));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 11));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 12));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 13));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 14));
		tabBlocks.addMaterial(new MaterialData(Material.WOOL, (byte) 15));
		tabBlocks.addMaterial(new MaterialData(Material.GOLD_BLOCK, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.IRON_BLOCK, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.STEP, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.STEP, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.STEP, (byte) 3));
		tabBlocks.addMaterial(new MaterialData(Material.STEP, (byte) 4));
		tabBlocks.addMaterial(new MaterialData(Material.STEP, (byte) 5));
		tabBlocks.addMaterial(new MaterialData(Material.STEP, (byte) 6));
		tabBlocks.addMaterial(new MaterialData(Material.STEP, (byte) 7));
		tabBlocks.addMaterial(new MaterialData(Material.BRICK, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.BOOKSHELF, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.MOSSY_COBBLESTONE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.OBSIDIAN, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.WOOD_STAIRS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.DIAMOND_ORE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.DIAMOND_BLOCK, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.COBBLESTONE_STAIRS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.REDSTONE_ORE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.ICE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.SNOW, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.CLAY, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.PUMPKIN, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.NETHERRACK, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.SOUL_SAND, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.GLOWSTONE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.JACK_O_LANTERN, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 2));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 3));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 4));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 5));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 6));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 7));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 8));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 9));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 10));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 11));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 12));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 13));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 14));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_GLASS, (byte) 15));
		tabBlocks.addMaterial(new MaterialData(Material.SMOOTH_BRICK, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.SMOOTH_BRICK, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.SMOOTH_BRICK, (byte) 2));
		tabBlocks.addMaterial(new MaterialData(Material.SMOOTH_BRICK, (byte) 3));
		tabBlocks.addMaterial(new MaterialData(Material.MELON_BLOCK, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.BRICK_STAIRS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.SMOOTH_STAIRS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.MYCEL, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.NETHER_BRICK, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.NETHER_BRICK_STAIRS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.ENDER_STONE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.WOOD_STEP, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.WOOD_STEP, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.WOOD_STEP, (byte) 2));
		tabBlocks.addMaterial(new MaterialData(Material.WOOD_STEP, (byte) 3));
		tabBlocks.addMaterial(new MaterialData(Material.WOOD_STEP, (byte) 4));
		tabBlocks.addMaterial(new MaterialData(Material.WOOD_STEP, (byte) 5));
		tabBlocks.addMaterial(new MaterialData(Material.SANDSTONE_STAIRS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.EMERALD_ORE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.EMERALD_BLOCK, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.SPRUCE_WOOD_STAIRS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.BIRCH_WOOD_STAIRS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.JUNGLE_WOOD_STAIRS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.COBBLE_WALL, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.COBBLE_WALL, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.QUARTZ_ORE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.QUARTZ_BLOCK, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.QUARTZ_BLOCK, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.QUARTZ_BLOCK, (byte) 2));
		tabBlocks.addMaterial(new MaterialData(Material.QUARTZ_STAIRS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 2));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 3));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 4));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 5));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 6));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 7));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 8));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 9));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 10));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 11));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 12));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 13));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 14));
		tabBlocks.addMaterial(new MaterialData(Material.STAINED_CLAY, (byte) 15));
		tabBlocks.addMaterial(new MaterialData(Material.LOG_2, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.LOG_2, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.ACACIA_STAIRS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.DARK_OAK_STAIRS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.HAY_BLOCK, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.HARD_CLAY, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.COAL_BLOCK, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.PACKED_ICE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.PRISMARINE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.PRISMARINE, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.PRISMARINE, (byte) 2));
		tabBlocks.addMaterial(new MaterialData(Material.PRISMARINE, (byte) 3));
		tabBlocks.addMaterial(new MaterialData(Material.RED_SANDSTONE, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.RED_SANDSTONE, (byte) 1));
		tabBlocks.addMaterial(new MaterialData(Material.RED_SANDSTONE, (byte) 2));
		tabBlocks.addMaterial(new MaterialData(Material.RED_SANDSTONE_STAIRS, (byte) 0));
		tabBlocks.addMaterial(new MaterialData(Material.STONE_SLAB2, (byte) 0));
		Categorys.add("tabBlocks", tabBlocks);
		
		Category tabDeko = new Category();
		tabDeko.addMaterial(new MaterialData(Material.SAPLING, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.SAPLING, (byte) 1));
		tabDeko.addMaterial(new MaterialData(Material.SAPLING, (byte) 2));
		tabDeko.addMaterial(new MaterialData(Material.SAPLING, (byte) 3));
		tabDeko.addMaterial(new MaterialData(Material.SAPLING, (byte) 4));
		tabDeko.addMaterial(new MaterialData(Material.SAPLING, (byte) 5));
		tabDeko.addMaterial(new MaterialData(Material.LEAVES, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.LEAVES, (byte) 1));
		tabDeko.addMaterial(new MaterialData(Material.LEAVES, (byte) 2));
		tabDeko.addMaterial(new MaterialData(Material.LEAVES, (byte) 3));
		tabDeko.addMaterial(new MaterialData(Material.WEB, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.LONG_GRASS, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.LONG_GRASS, (byte) 1));
		tabDeko.addMaterial(new MaterialData(Material.LONG_GRASS, (byte) 2));
		tabDeko.addMaterial(new MaterialData(Material.DEAD_BUSH, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.YELLOW_FLOWER, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.RED_ROSE, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.RED_ROSE, (byte) 1));
		tabDeko.addMaterial(new MaterialData(Material.RED_ROSE, (byte) 2));
		tabDeko.addMaterial(new MaterialData(Material.RED_ROSE, (byte) 3));
		tabDeko.addMaterial(new MaterialData(Material.RED_ROSE, (byte) 4));
		tabDeko.addMaterial(new MaterialData(Material.RED_ROSE, (byte) 5));
		tabDeko.addMaterial(new MaterialData(Material.RED_ROSE, (byte) 6));
		tabDeko.addMaterial(new MaterialData(Material.RED_ROSE, (byte) 7));
		tabDeko.addMaterial(new MaterialData(Material.RED_ROSE, (byte) 8));
		tabDeko.addMaterial(new MaterialData(Material.BROWN_MUSHROOM, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.RED_MUSHROOM, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.TORCH, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.CHEST, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.WORKBENCH, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.FURNACE, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.LADDER, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.SNOW, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.CACTUS, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.JUKEBOX, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.FENCE, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.MONSTER_EGGS, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.MONSTER_EGGS, (byte) 1));
		tabDeko.addMaterial(new MaterialData(Material.MONSTER_EGGS, (byte) 2));
		tabDeko.addMaterial(new MaterialData(Material.MONSTER_EGGS, (byte) 3));
		tabDeko.addMaterial(new MaterialData(Material.MONSTER_EGGS, (byte) 4));
		tabDeko.addMaterial(new MaterialData(Material.MONSTER_EGGS, (byte) 5));
		tabDeko.addMaterial(new MaterialData(Material.IRON_FENCE, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.THIN_GLASS, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.VINE, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.WATER_LILY, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.NETHER_FENCE, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.ENCHANTMENT_TABLE, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.ENDER_PORTAL_FRAME, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.ENDER_CHEST, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.ANVIL, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.ANVIL, (byte) 1));
		tabDeko.addMaterial(new MaterialData(Material.ANVIL, (byte) 2));
		tabDeko.addMaterial(new MaterialData(Material.TRAPPED_CHEST, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 1));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 2));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 3));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 4));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 5));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 6));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 7));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 8));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 9));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 10));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 11));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 12));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 13));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 14));
		tabDeko.addMaterial(new MaterialData(Material.STAINED_GLASS_PANE, (byte) 15));
		tabDeko.addMaterial(new MaterialData(Material.LEAVES_2, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.LEAVES_2, (byte) 1));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 1));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 2));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 3));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 4));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 5));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 6));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 7));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 8));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 9));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 10));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 11));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 12));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 13));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 14));
		tabDeko.addMaterial(new MaterialData(Material.CARPET, (byte) 15));
		tabDeko.addMaterial(new MaterialData(Material.DOUBLE_PLANT, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.DOUBLE_PLANT, (byte) 1));
		tabDeko.addMaterial(new MaterialData(Material.DOUBLE_PLANT, (byte) 2));
		tabDeko.addMaterial(new MaterialData(Material.DOUBLE_PLANT, (byte) 3));
		tabDeko.addMaterial(new MaterialData(Material.DOUBLE_PLANT, (byte) 4));
		tabDeko.addMaterial(new MaterialData(Material.DOUBLE_PLANT, (byte) 5));
		tabDeko.addMaterial(new MaterialData(Material.PAINTING, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.SIGN, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.BED, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.ITEM_FRAME, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.FLOWER_POT, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.SKULL_ITEM, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.SKULL_ITEM, (byte) 1));
		tabDeko.addMaterial(new MaterialData(Material.SKULL_ITEM, (byte) 2));
		tabDeko.addMaterial(new MaterialData(Material.SKULL_ITEM, (byte) 3));
		tabDeko.addMaterial(new MaterialData(Material.SKULL_ITEM, (byte) 4));
		tabDeko.addMaterial(new MaterialData(Material.BIRCH_FENCE, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.JUNGLE_FENCE, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.SPRUCE_FENCE, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.ACACIA_FENCE, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.DARK_OAK_FENCE, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.ARMOR_STAND, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 0));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 1));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 2));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 3));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 4));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 5));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 6));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 7));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 8));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 9));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 10));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 11));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 12));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 13));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 14));
		tabDeko.addMaterial(new MaterialData(Material.BANNER, (byte) 15));
		Categorys.add("tabDeko", tabDeko);
		
		Category tabRedstone = new Category();
		tabRedstone.addMaterial(new MaterialData(Material.DISPENSER, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.NOTE_BLOCK, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.PISTON_STICKY_BASE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.PISTON_STICKY_BASE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.TNT, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.LEVER, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.STONE_PLATE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.WOOD_PLATE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.REDSTONE_TORCH_ON, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.STONE_BUTTON, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.TRAP_DOOR, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.FENCE_GATE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.REDSTONE_LAMP_OFF, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.TRIPWIRE_HOOK, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.WOOD_BUTTON, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.GOLD_PLATE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.IRON_PLATE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.DAYLIGHT_DETECTOR, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.REDSTONE_BLOCK, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.HOPPER, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.DROPPER, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.WOOD_DOOR, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.IRON_DOOR, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.REDSTONE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.DIODE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.REDSTONE_COMPARATOR, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.BIRCH_FENCE_GATE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.BIRCH_FENCE_GATE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.JUNGLE_FENCE_GATE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.SPRUCE_FENCE_GATE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.ACACIA_FENCE_GATE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.DARK_OAK_FENCE_GATE, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.BIRCH_DOOR, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.BIRCH_DOOR, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.JUNGLE_DOOR, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.SPRUCE_DOOR, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.ACACIA_DOOR, (byte) 0));
		tabRedstone.addMaterial(new MaterialData(Material.DARK_OAK_DOOR, (byte) 0));
		Categorys.add("tabRedstone", tabRedstone);
		
		Category tabMove = new Category();
		tabMove.addMaterial(new MaterialData(Material.POWERED_RAIL, (byte) 0));
		tabMove.addMaterial(new MaterialData(Material.DETECTOR_RAIL, (byte) 0));
		tabMove.addMaterial(new MaterialData(Material.RAILS, (byte) 0));
		tabMove.addMaterial(new MaterialData(Material.ACTIVATOR_RAIL, (byte) 0));
		tabMove.addMaterial(new MaterialData(Material.MINECART, (byte) 0));
		tabMove.addMaterial(new MaterialData(Material.SADDLE, (byte) 0));
		tabMove.addMaterial(new MaterialData(Material.BOAT, (byte) 0));
		tabMove.addMaterial(new MaterialData(Material.STORAGE_MINECART, (byte) 0));
		tabMove.addMaterial(new MaterialData(Material.POWERED_MINECART, (byte) 0));
		tabMove.addMaterial(new MaterialData(Material.CARROT_STICK, (byte) 0));
		tabMove.addMaterial(new MaterialData(Material.EXPLOSIVE_MINECART, (byte) 0));
		tabMove.addMaterial(new MaterialData(Material.HOPPER_MINECART, (byte) 0));
		Categorys.add("tabMove", tabMove);
		
		Category tabUtil = new Category();
		tabUtil.addMaterial(new MaterialData(Material.BEACON, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.BUCKET, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.WATER_BUCKET, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.LAVA_BUCKET, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.SNOW_BALL, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.MILK_BUCKET, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.PAPER, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.BOOK, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.SLIME_BALL, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.BONE, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.ENDER_PEARL, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.EYE_OF_ENDER, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 50));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 51));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 52));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 53));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 54));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 55));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 56));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 57));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 58));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 59));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 60));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 61));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 62));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 65));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 66));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 90));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 91));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 92));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 93));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 94));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 95));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 96));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 98));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 100));
		tabUtil.addMaterial(new MaterialData(Material.MONSTER_EGG, (byte) 120));
		tabUtil.addMaterial(new MaterialData(Material.EXP_BOTTLE, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.FIREBALL, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.BOOK_AND_QUILL, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.MAP, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.FIREWORK_CHARGE, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.IRON_BARDING, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.GOLD_BARDING, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.DIAMOND_BARDING, (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.getMaterial(2256), (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.getMaterial(2257), (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.getMaterial(2258), (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.getMaterial(2259), (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.getMaterial(2260), (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.getMaterial(2261), (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.getMaterial(2262), (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.getMaterial(2263), (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.getMaterial(2264), (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.getMaterial(2265), (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.getMaterial(2266), (byte) 0));
		tabUtil.addMaterial(new MaterialData(Material.getMaterial(2267), (byte) 0));
		Categorys.add("tabUtil", tabUtil);
		
		Category tabEat = new Category();
		tabEat.addMaterial(new MaterialData(Material.RAW_FISH, (byte) 3));
		tabEat.addMaterial(new MaterialData(Material.GOLDEN_CARROT, (byte) 0));
		tabEat.importFrom(Category.Special.EATABLE);
		Categorys.add("tabEat", tabEat);
		
		Category tabTools = new Category();
		tabTools.importFrom(Category.Special.TOOLS);
		Categorys.add("tabTools", tabTools);
		
		Category tabCombats = new Category();
		tabCombats.addMaterial(new MaterialData(Material.ARROW, (byte) 0));
		tabCombats.importFrom(Category.Special.ARMOR);
		tabCombats.importFrom(Category.Special.WEAPONS);
		Categorys.add("tabCombats", tabCombats);
		
		Category tabBrewing = new Category();
		tabBrewing.addMaterial(new MaterialData(Material.GHAST_TEAR, (byte) 0));
		tabBrewing.addMaterial(new MaterialData(Material.GLASS_BOTTLE, (byte) 0));
		tabBrewing.addMaterial(new MaterialData(Material.FERMENTED_SPIDER_EYE, (byte) 0));
		tabBrewing.addMaterial(new MaterialData(Material.BLAZE_POWDER, (byte) 0));
		tabBrewing.addMaterial(new MaterialData(Material.MAGMA_CREAM, (byte) 0));
		tabBrewing.addMaterial(new MaterialData(Material.BREWING_STAND_ITEM, (byte) 0));
		tabBrewing.addMaterial(new MaterialData(Material.CAULDRON_ITEM, (byte) 0));
		tabBrewing.addMaterial(new MaterialData(Material.SPECKLED_MELON, (byte) 0));
		tabBrewing.addMaterial(new MaterialData(Material.RABBIT_FOOT, (byte) 0));
		tabBrewing.importFrom(Category.Special.DRINKABLE);
		Categorys.add("tabBrewing", tabBrewing);
		
		Category tabMaterials = new Category();
		tabMaterials.addMaterial(new MaterialData(Material.COAL, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.COAL, (byte) 1));
		tabMaterials.addMaterial(new MaterialData(Material.DIAMOND, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.IRON_INGOT, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.GOLD_INGOT, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.STICK, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.BOWL, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.STRING, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.FEATHER, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.SULPHUR, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.SEEDS, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.WHEAT, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.FLINT, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.LEATHER, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.CLAY_BRICK, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.CLAY_BALL, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.SUGAR_CANE, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.EGG, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.GLOWSTONE_DUST, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 1));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 2));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 3));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 4));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 5));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 6));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 7));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 8));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 9));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 10));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 11));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 12));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 13));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 14));
		tabMaterials.addMaterial(new MaterialData(Material.INK_SACK, (byte) 15));
		tabMaterials.addMaterial(new MaterialData(Material.SUGAR, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.PUMPKIN_SEEDS, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.MELON_SEEDS, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.BLAZE_ROD, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.GOLD_NUGGET, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.NETHER_WARTS, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.EMERALD, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.NETHER_STAR, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.NETHER_BRICK_ITEM, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.QUARTZ, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.PRISMARINE_SHARD, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.PRISMARINE_CRYSTALS, (byte) 0));
		tabMaterials.addMaterial(new MaterialData(Material.RABBIT_HIDE, (byte) 0));
		Categorys.add("tabMaterials", tabMaterials);
	}
	
	/**
	 * Adds a new category to the registry
	 * @param key The name of the category
	 * @param category The category to add
	 */
	public static void add(String key, Category category) {
		if (Categorys.containsKey(key)) {
			return;
		} else {
			Categorys.categories.put(key, category);
		}
	}
	
	/**
	 * 
	 * @param key The cateogory-name to check
	 * @return If there is a category with this given name
	 */
	public static boolean containsKey(String key) {
		return Categorys.categories.containsKey(key);
	}

	/**
	 * 
	 * @param key The category-name
	 * @return The Category-object or null, if there isnt a category with this name
	 */
	public static Category get(String key) {
		return Categorys.categories.get(key);
	}
	
}
